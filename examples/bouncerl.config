{mode, max}.
{duration, 5}.
{concurrent, 6}.

{driver, basho_bench_driver_http}.

%% Default generators, reference by the atoms key_generator and value_generator
{key_generator, {int_to_str, {pareto_int, 10000}}}.

{value_generator, {fixed_bin, 10000}}.

%%% Generators: {Name, KeyGen | ValGen}
% Name: atom()
% KeyGen: User or Basho Bench defined key generator
% ValGen: User or Basho Bench defined value generator
{generators, [
              {string_g, {key_generator, {int_to_str, {pareto_int, 10000}}}}
             ]}.

%%% Values: {Name, Value}
%%%         {Name, {FormattedValue, Generators}}
% Name: atom()
% Value: string() | atom() - named generator, can be key_generator or value_generator for default
% FormattedValue: string() - formatted with io_lib:format
% Generators: list() - list of generators, can be key_generator or value_generator for default
{values, [
          {json_v, "{\"operation\":\"increment\",\"step\":1}"}
         ]}.

%%% Headers: {Name, Headers}
% Name: atom()
% Headers: proplist()
{headers, [
           {json_h, [{'Content-Type', 'application/json'}, {'Accept', 'application/json'}]}
          ]}.

%%% Targets: {Name, {Host, Port, Path}}
%%%          {Name, [{Host1, Port1, Path1},{Host2, Port2, Path2},...]}
%%%          {Name, {Host, Port, {FormattedPath, Generators}}}
%%%          {Name, [{Host1, Port1, {FormattedPath1, Generators1}},{Host2, Port2, {FormattedPath2, Generators2}},...]}
% Name: atom()
% Host: string()
% Port: integer()
% Path: string()
% FormattedPath: string() - formatted with io_lib:format
% Generators: list() - list of generators, can be key_generator or value_generator for default
{targets, [
           {with_key_t, [
             {"192.168.101.1", 8888, {"/rate/foo/~s", [key_generator]}},
             {"192.168.101.2", 8888, {"/rate/foo/~s", [key_generator]}},
             {"192.168.101.5", 8888, {"/rate/foo/~s", [key_generator]}}
	   ]}
          ]}.

%%% Operations: {{get|delete, Target}, Weight}
%%%             {{get|delete, Target, Header}, Weight}
%%%             {{put|post, Target, Value}, Weight}
%%%             {{put|post, Target, Value, Header}, Weight}
% Target: atom() - defined target
% Header: atom() - defined header
% Value: atom() - defined value
% Weight: integer() - ratio of this operation to the rest (ThisWeight / TotalWeightSum = % of this Operation)

{operations, [
              %% Get with a key and headers
              {{get, with_key_t, json_h}, 1},
              {{put, with_key_t, json_v, json_h}, 1}
             ]}.
